FROM php:8.2-alpine

## install image updates
RUN apk update && apk upgrade

## install common php modules
RUN apk --no-cache add \
            wget \ 
            curl \
            git \
            libxml2-dev \
            bash \
            php8 \
            php8-curl \
            php8-openssl \
            php8-iconv \
            php8-json \
            php8-mbstring \
            php8-phar \
            php8-dom --repository http://nl.alpinelinux.org/alpine/edge/testing/

## install jpg/font libraries
RUN apk --no-cache add \
        freetype \
        libpng \
        libjpeg-turbo \
        freetype-dev \
        libpng-dev \
        jpeg-dev \
        libwebp-dev \
        libjpeg \
        libjpeg-turbo-dev

## install php gd
RUN docker-php-ext-configure gd \
        --with-freetype=/usr/lib/ \
        --with-jpeg=/usr/lib/ \
        --with-webp=/usr
RUN NUMPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \
    && docker-php-ext-install -j${NUMPROC} gd

## install soap
RUN docker-php-ext-install soap

## install xdebug
RUN apk add --no-cache --virtual .build-deps $PHPIZE_DEPS
RUN apk add --update linux-headers
RUN pecl install xdebug
RUN docker-php-ext-enable xdebug
RUN apk del -f .build-deps

## install composer latest
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer 

## install usermod, groupmod
RUN apk --no-cache add shadow --repository http://dl-2.alpinelinux.org/alpine/edge/community/

## set arbitary user in system with running users uid and gid
#### build with: --build-arg UID=$(id -u) --build-arg GID=$(id -g)
ARG UNAME=www-data
ARG UGROUP=www-data
ARG UID=1000
ARG GID=1001
RUN usermod  --uid $UID $UNAME
RUN groupmod --gid $GID $UGROUP

## finish creating environment
USER www-data

## install development packages
RUN composer global require laravel/pint
RUN composer global require "phpunit/phpunit:10.1@dev"
RUN composer global require "phpunit/php-code-coverage:10.1@dev"
RUN composer global require "squizlabs/php_codesniffer:3.x"
RUN composer global require rector/rector
RUN composer global require driftingly/rector-laravel

## Config environment
ENV PATH="${PATH}:/home/www-data/.composer/vendor/bin/"
ADD phpcs.xml /home/www-data/.composer/vendor/squizlabs/php_codesniffer/src/Standards/Larapress/ruleset.xml

## copy php settings
ADD dev/phpcli.ini /usr/local/etc/php/conf.d/docker-php-default.ini

RUN mkdir -p /var/www
WORKDIR /var/www
